# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wuG7aAwu2zyTfKX1SoiJoDH_Jh99Hn2z
"""



from google.colab import drive
drive.mount('/content/drive')

!pip install imgaug opencv-python-headless

import imgaug as ia
from imgaug import augmenters as iaa
import os
import cv2
from glob import glob

# 경로와 기본 설정
IMG_DIR = '/content/Data'  # 이미지 폴더 경로
IMG_EXTENSION = '.jpg'     # 이미지 확장자
NUM_AUG_IMAGES = 5         # 각 이미지당 생성할 Augmented 이미지 수
DEBUG = False              # Debug 모드

if not os.path.isdir(IMG_DIR):
    raise Exception(f'{IMG_DIR} is not a valid directory.')

# Augmentation 시퀀스 정의
seq1 = iaa.Sequential([
    iaa.Fliplr(0.5),                             # 50% 확률로 수평 뒤집기
    iaa.Crop(percent=(0, 0.10)),                 # 0% ~ 10% 크롭
    iaa.GaussianBlur(sigma=(0, 1))               # 가우시안 블러
])

# 이미지 파일 목록 가져오기
img_fns = glob(os.path.join(IMG_DIR, '*' + IMG_EXTENSION))

# Augmentation 처리
for img_fn in img_fns:
    # 이미지 로드
    img1_bgr = cv2.imread(img_fn)
    if img1_bgr is None:
        print(f"Failed to load image {img_fn}")
        continue

    img1 = cv2.cvtColor(img1_bgr, cv2.COLOR_BGR2RGB)

    # Augmentation N번 수행
    for i in range(NUM_AUG_IMAGES):
        img_aug1 = seq1(images=[img1])[0]  # Augmentation 적용

        # Augmented 이미지 저장
        base_fn = img_fn.replace(IMG_EXTENSION, '')  # 원본 이름
        img_aug_fn = f"{base_fn}_aug{i+1}{IMG_EXTENSION}"  # 새 파일명
        img_aug_bgr1 = cv2.cvtColor(img_aug1, cv2.COLOR_RGB2BGR)
        cv2.imwrite(img_aug_fn, img_aug_bgr1)  # 저장

        # Debug 모드일 때 원본과 Augmented 이미지 시각화
        if DEBUG:
            cv2.imshow('Original image', img1_bgr)
            cv2.imshow('Augmented image', img_aug_bgr1)
            cv2.waitKey()

# Debug 모드에서 이미지 윈도우 닫기
if DEBUG:
    cv2.destroyAllWindows()

print("Augmentation completed.")